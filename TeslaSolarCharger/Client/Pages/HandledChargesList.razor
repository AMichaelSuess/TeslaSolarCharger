@page "/HandledCharges/{carId:int}"
@using TeslaSolarCharger.Shared.Dtos.ChargingCost
@using TeslaSolarCharger.Shared.Dtos.Table
@inject HttpClient HttpClient

<h1>HandledChargesList</h1>

@if (_tableContent == null)
{
    <div class="spinner"></div>
}
else
{
    <TableComponent 
        Content="@_tableContent"></TableComponent>
}

@code {
    [Parameter]
    public int CarId { get; set; }


    private DtoTableContent? _tableContent;

    protected override async Task OnInitializedAsync()
    {
        var handledCharges = await HttpClient.GetFromJsonAsync<List<DtoHandledCharge>>($"api/ChargingCost/GetHandledCharges?carId={CarId}").ConfigureAwait(false) ?? new List<DtoHandledCharge>();
        _tableContent = GeneratePlannedChargingSlotsTableContent(handledCharges);
    }

    private DtoTableContent GeneratePlannedChargingSlotsTableContent(List<DtoHandledCharge> handledCharges)
    {
        var table = new DtoTableContent()
        {
            TableHeader = new DtoTableRow()
            {
                Elements = new List<string?>()
                {
                    "Start time",
                    "Charge Cost",
                    "Used Grid kWh",
                    "Used Solar kWh",
                    "Grid Price",
                    "Solar Price",
                    "Avg. Spot Price",
                },
            },
            TableData = new List<DtoTableRow>(),
        };
        foreach (var handledCharge in handledCharges)
        {
            table.TableData.Add(new DtoTableRow()
            {
                Elements = new List<string?>()
                {
                    handledCharge.StartTime?.ToString("g"),
                    handledCharge.CalculatedPrice.ToString("0.00"),
                    handledCharge.UsedGridEnergy.ToString("0.00"),
                    handledCharge.UsedSolarEnergy.ToString("0.00"),
                    handledCharge.GridPrice.ToString("0.00"),
                    handledCharge.SolarPrice.ToString("0.00"),
                    handledCharge.AverageSpotPrice != null ? ((decimal)handledCharge.AverageSpotPrice).ToString("0.00") : "",
                },
            });
        }

        return table;
    }
}
